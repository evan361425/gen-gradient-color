{"version":3,"sources":["webpack://gen-gradient-color/./src/constant.js","webpack://gen-gradient-color/./src/gen-gradient-color.js","webpack://gen-gradient-color/./src/index.js","webpack://gen-gradient-color/./src/util.js","webpack://gen-gradient-color/webpack/bootstrap","webpack://gen-gradient-color/webpack/startup"],"names":["exports","GAMMA","L1","L2","C1","C2","RATIO","rGAMMA","util","require","CONST","GenGradientColor","color1","color2","steps","this","setColors","Array","keys","map","step","gen","undefined","rgb2hex","colors","linear1","l1","i","lerp","linear2","sum","reduce","total","color","intensity","Math","pow","bias1","bias2","linear2rgb","color2rgb","rgb2linear","carry","v","module","window","isString","value","String","hex2rgb","hex","rgb","match","length","TypeError","repeat","parseInt","isArray","sanitizeColor","result","min","abs","isNaN","toString","padStart","join","linear","round","x","y","p","max","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__"],"mappings":"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","file":"bundle.min.js","sourcesContent":["exports.GAMMA = 0.43;\nexports.L1 = 0.055;\nexports.L2 = 12.92;\nexports.C1 = 10.31475;\nexports.C2 = 0.0031308;\nexports.RATIO = 2.4;\nexports.rGAMMA = 1 / exports.GAMMA;\n","const util = require('./util');\nconst CONST = require('./constant');\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\nclass GenGradientColor {\n  /**\n   * @constructor\n   * @param {(string|number[])} color1 - String represent color code, Array represent RGB data\n   * @param {(string|number[])} color2\n   * @param {number} steps - Number of steps, it can set dynamically\n   */\n  constructor(color1 = null, color2 = null, steps = 0) {\n    this.steps = steps;\n\n    if (color1 && color2) {\n      this.setColors(color1, color2);\n    }\n  }\n\n  // Public\n\n  /**\n   * Generate all colors in gradient\n   * You must set color1 and color2 first\n   * @param {number} steps\n   * @return {array}\n   */\n  gens(steps) {\n    this.steps = +steps - 1;\n    return [...Array(steps).keys()].map((step) => this.gen(step));\n  }\n\n  /**\n   * Generate color in gradient\n   * @param {number} step 0-index\n   * @param {number} steps\n   * @return {string} hex - Hex code\n   */\n  gen(step, steps) {\n    if (steps !== undefined) {\n      this.steps = steps;\n    }\n\n    if (!this.steps || !step) {\n      return util.rgb2hex(this.color1);\n    }\n\n    step /= this.steps;\n\n    let colors = this.linear1.map((l1, i) => util.lerp(l1, this.linear2[i], step));\n    const sum = colors.reduce((total, color) => total + color, 0);\n\n    if (sum != 0) {\n      const intensity = Math.pow(util.lerp(this.bias1, this.bias2, step), CONST.rGAMMA) / sum;\n      colors = colors.map((color) => color * intensity);\n    }\n\n    return util.rgb2hex(util.linear2rgb(colors));\n  }\n\n  // Setter\n\n  /**\n   * set steps\n   * @param {number} steps\n   */\n  setSteps(steps) {\n    this.steps = steps;\n  }\n\n  /**\n   * set color, linear value, bright value\n   * @param {string|array} color1\n   * @param {string|array} color2\n   */\n  setColors(color1, color2) {\n    this.color1 = util.color2rgb(color1);\n    this.color2 = util.color2rgb(color2);\n    this.linear1 = util.rgb2linear(this.color1);\n    this.linear2 = util.rgb2linear(this.color2);\n    this.bias1 = Math.pow(this.linear1.reduce((carry, v) => carry + v, 0), CONST.GAMMA);\n    this.bias2 = Math.pow(this.linear2.reduce((carry, v) => carry + v, 0), CONST.GAMMA);\n  }\n}\n\nmodule.exports = GenGradientColor;\n","/**\n * Main logic: https://stackoverflow.com/questions/22607043/color-gradient-algorithm/39924008#39924008\n *\n * And other helper method.\n *\n * @author Shueh Chou Lu <evanlu361425@gmail.com>\n * @version 1.0.4\n */\n\nconst GenGradientColor = require('./gen-gradient-color');\nconst util = require('./util');\n\nif (typeof window !== 'undefined') {\n  window.GenGradientColor = GenGradientColor;\n  window.GenGradientColor.util = util;\n}\n\nmodule.exports = {\n  GenGradientColor,\n  util,\n};\n","const CONST = require('./constant');\n\n/**\n * Check is input a string\n * @param {mixed} value\n * @return {boolean}\n */\nfunction isString(value) {\n  return typeof value === 'string' || value instanceof String;\n}\n\n/**\n * String hex code to RGB number array\n * @param {string} hex - Hex code\n * @return {number[]} - Array of RGB\n */\nfunction hex2rgb(hex) {\n  const rgb = hex.match(hex.length > 4 ?\n    /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i :\n    /^#?([a-f\\d]{1})([a-f\\d]{1})([a-f\\d]{1})$/i);\n\n  if (!rgb) {\n    throw new TypeError('Hex code is invalid which should be 3/6 digits');\n  }\n\n  const rgbArray = hex.length > 4 ?\n    [rgb[1], rgb[2], rgb[3]] :\n    [rgb[1].repeat(2), rgb[2].repeat(2), rgb[3].repeat(2)];\n\n  return rgbArray.map((color) => parseInt(color, 16));\n}\n\n/**\n * Return array of rgb\n * @param {string|array} color\n * @return {array}\n */\nfunction color2rgb(color) {\n  if (isString(color)) {\n    return hex2rgb(color);\n  } else if (Array.isArray(color)) {\n    return color.map(sanitizeColor);\n  } else {\n    throw new TypeError('Color must be string or array');\n  }\n}\n\n/**\n * Get the Linear intERPolation between two value\n * @param {number} x - First var\n * @param {number} y - Second var\n * @param {number} p - Probability\n * @return {number}\n */\nfunction lerp(x, y, p) {\n  p = Math.max(0, Math.min(1, p));\n  return x * (1 - p) + y * p;\n}\n\n/**\n * String hex code to RGB number array\n * @param {string|array} rgb\n * @return {string} - Hex code\n */\nfunction rgb2hex(rgb) {\n  const hex = color2rgb(rgb)\n    .map((color) => color.toString(16).padStart(2, '0'))\n    .join('');\n\n  return `#${hex}`;\n}\n\n/**\n * Returns a linear value in the range [0,1]\n * for sRGB input in [0,255].\n * @param {string|array} rgb\n * @return {number[]}\n */\nfunction rgb2linear(rgb) {\n  return color2rgb(rgb).map((color) =>\n    color <= CONST.C1 ?\n      color / CONST.L2 / 255.0 :\n      Math.pow((color / 255.0 + CONST.L1) / (1 + CONST.L1), CONST.RATIO),\n  );\n}\n\n/**\n * Returns a sRGB value in the range [0,255]\n * for linear input in [0,1]\n * @param {number[]} linear\n * @return {number[]}\n */\nfunction linear2rgb(linear) {\n  return linear.map((color) =>\n    Math.round(255.9999 * (\n      color <= CONST.C2 ?\n        CONST.L2 * color :\n        (1 + CONST.L1) * Math.pow(color, 1 / CONST.RATIO) - CONST.L1\n    )),\n  );\n}\n\n/**\n * Sanitize color to 0-255\n * @param  {mixed} color\n * @return {number}\n */\nfunction sanitizeColor(color) {\n  const result = Math.min(255, Math.abs(+color));\n  return isNaN(result) ? 0 : result;\n}\n\nmodule.exports = {\n  isString,\n  hex2rgb,\n  rgb2hex,\n  color2rgb,\n  linear2rgb,\n  rgb2linear,\n  lerp,\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module\n// This entry module is referenced by other modules so it can't be inlined\n__webpack_require__(579);\n"],"sourceRoot":""}