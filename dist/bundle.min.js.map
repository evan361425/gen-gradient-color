{"version":3,"sources":["webpack://gen-gradient-color/./src/constant.js","webpack://gen-gradient-color/./src/gen-gradient-color.js","webpack://gen-gradient-color/./src/index.js","webpack://gen-gradient-color/./src/util.js","webpack://gen-gradient-color/webpack/bootstrap","webpack://gen-gradient-color/webpack/startup"],"names":["module","exports","GAMMA","L1","L2","C1","C2","RATIO","rGAMMA","util","require","CONST","GenGradientColor","color1","color2","steps","this","setColors","Array","keys","map","i","gen","step","undefined","rgb2hex","colors","l1","lerp","sum","reduce","total","color","intensity","Math","pow","B1","B2","linear2rgb","color2rgb","rgb2linear","carry","v","window","isString","value","String","hex2rgb","hex","result","exec","TypeError","parseInt","isArray","el","x","y","p","rgb","c","min","abs","toString","length","join","linear","round","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__"],"mappings":"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","file":"bundle.min.js","sourcesContent":["const GAMMA = 0.43;\nconst L1 = 0.055;\nconst L2 = 12.92;\nconst C1 = 10.31475;\nconst C2 = 0.0031308;\nconst RATIO = 2.4;\nconst rGAMMA = 1 / GAMMA;\n\nmodule.exports = {\n  GAMMA,\n  L1,\n  L2,\n  C1,\n  C2,\n  RATIO,\n  rGAMMA,\n};\n","const util = require('./util');\nconst CONST = require('./constant');\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\nclass GenGradientColor {\n  /**\n   * @constructor\n   * @param {(string|number[])} color1 - String represent color code, Array represent RGB data\n   * @param {(string|number[])} color2\n   * @param {number} steps - Number of steps, it can set dynamically\n   */\n  constructor(color1 = 'e74c3c', color2 = '3498eb', steps = 0) {\n    this.steps = steps;\n    this.setColors(color1, color2);\n  }\n\n  // Public\n\n  /**\n   * Generate all colors in gradient\n   * You must set color1 and color2 first\n   * @param {number} steps\n   * @return {array}\n   */\n  gens(steps) {\n    steps = +steps;\n    this.steps = steps - 1;\n    return [...Array(steps).keys()].map((i) => this.gen(i));\n  }\n\n  /**\n   * Generate color in gradient\n   * @param {number} step 0-index\n   * @param {number} steps\n   * @return {string} hex - Hex code\n   */\n  gen(step, steps) {\n    if (steps !== undefined) {\n      this.steps = steps;\n    }\n\n    if (!this.steps || !step) {\n      return util.rgb2hex(this.C1);\n    }\n\n    step /= this.steps;\n\n    let colors = this.L1.map(\n      (l1, i) => util.lerp(l1, this.L2[`${i}`], step),\n    );\n    const sum = colors.reduce((total, color) => total + color, 0);\n\n    if (sum != 0) {\n      const intensity = Math.pow(util.lerp(this.B1, this.B2, step), CONST.rGAMMA) / sum;\n      colors = colors.map((color) => color * intensity);\n    }\n\n    return util.rgb2hex(util.linear2rgb(colors));\n  }\n\n  // Setter\n\n  /**\n   * set steps\n   * @param {number} steps\n   */\n  setSteps(steps) {\n    this.steps = steps;\n  }\n\n  /**\n   * set color, linear value, bright value\n   * @param {string|array} color1\n   * @param {string|array} color2\n   */\n  setColors(color1, color2) {\n    this.C1 = util.color2rgb(color1);\n    this.C2 = util.color2rgb(color2);\n    this.L1 = util.rgb2linear(this.C1);\n    this.L2 = util.rgb2linear(this.C2);\n    this.B1 = Math.pow(this.L1.reduce((carry, v) => carry + v, 0), CONST.GAMMA);\n    this.B2 = Math.pow(this.L2.reduce((carry, v) => carry + v, 0), CONST.GAMMA);\n  }\n}\n\nmodule.exports = GenGradientColor;\n","/**\n * Use algorithm from stackoverflow to\n * generate gradient color from color1 to color2 in n steps\n * https://stackoverflow.com/questions/22607043/color-gradient-algorithm/39924008#39924008\n * @author Evan Lu <evanlu361425@gmail.com>\n * @version 1.0.0\n */\n\nconst GenGradientColor = require('./gen-gradient-color');\nconst util = require('./util');\n\nif (window) {\n  window.GenGradientColor = GenGradientColor;\n}\n\nmodule.exports = {\n  GenGradientColor,\n  util,\n};\n","const CONST = require('./constant');\n\n/**\n * Wheather input is string\n * @param {mixed} value\n * @return {boolean}\n */\nfunction isString(value) {\n  return typeof value === 'string' || value instanceof String;\n}\n\n/**\n * String hex code to RGB number array\n * @param {string} hex - Hex code\n * @return {number[]} - Array of RGB\n */\nfunction hex2rgb(hex) {\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n\n  if (!result) {\n    throw new TypeError('Hex code is invalid please follow #?????? which ? is an hex number');\n  }\n\n  return [\n    parseInt(result[1], 16),\n    parseInt(result[2], 16),\n    parseInt(result[3], 16),\n  ];\n}\n\n/**\n * Return array of rgb\n * @param {string|array} color\n * @return {array}\n */\nfunction color2rgb(color) {\n  if (isString(color)) {\n    return hex2rgb(color);\n  } else if (Array.isArray(color)) {\n    return color.map((el) => +el);\n  }\n  throw new TypeError('Color must be string or array');\n}\n\n/**\n * Get the Linear intERPolation between two value\n * @param {number} x - First var\n * @param {number} y - Second var\n * @param {number} p - Probability\n * @return {number}\n */\nfunction lerp(x, y, p) {\n  return x * (1 - p) + y * p;\n}\n\n/**\n * String hex code to RGB number array\n * @param {number[]} rgb\n * @return {string} - Hex code\n */\nfunction rgb2hex(rgb) {\n  return '#' + rgb.map((c) => {\n    c = Math.min(255, Math.abs(c)).toString(16);\n    return c.length == 1 ? '0' + c : c;\n  }).join('');\n}\n\n/**\n * Returns a linear value in the range [0,1]\n * for sRGB input in [0,255].\n * @param {number[]} rgb\n * @return {number[]}\n */\nfunction rgb2linear(rgb) {\n  return rgb.map((x) =>\n    x <= CONST.C1 ?\n      x / CONST.L2 / 255. :\n      Math.pow((x / 255. + CONST.L1) / (1 + CONST.L1), CONST.RATIO),\n  );\n}\n\n/**\n * Returns a sRGB value in the range [0,255]\n * for linear input in [0,1]\n * @param {number[]} linear\n * @return {number[]}\n */\nfunction linear2rgb(linear) {\n  return linear.map((x) =>\n    Math.round(255.9999 * (\n      x <= CONST.C2 ?\n        CONST.L2 * x :\n        (1 + CONST.L1) * Math.pow(x, 1 / CONST.RATIO) - CONST.L1\n    )),\n  );\n}\n\nmodule.exports = {\n  isString,\n  hex2rgb,\n  color2rgb,\n  lerp,\n  rgb2hex,\n  rgb2linear,\n  linear2rgb,\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module\n// This entry module is referenced by other modules so it can't be inlined\n__webpack_require__(579);\n"],"sourceRoot":""}